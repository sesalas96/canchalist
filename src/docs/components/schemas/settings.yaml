schemas:
  Settings:
      type: object
      properties:
        sourceEnvironment:
          type: string
          description: >
            This value consists of 2 parts. The first part (normally the first 4 characters) of the value will be the System Environment the program will access. 
            The second part (normally the last 3 characters) of the value will be the Database Environment that the program will access to retrieve data.
        clientApplication:
          type: string
          nullable: true
          description: >
            This is a free format field that simply gets logged for debugging purposes. This is useful to help filter out calls made by different callers.
        currentUser:
          type: string
          nullable: true
          description: >
            This has to be a valid user in the Prism system. It is important to make sure this user exists in the first portion of the 'sourceEnvironment' value above, 
            as users are given access to these environments individually so as to allow granular access to specific environments.
        transactionId:
          type: string
          nullable: true
          description: >
            This is a Unique value defined by and tracked by the calling system to help debug integrations from the calling system to the Prism backend. 
            An example would be I have an issue when the calling system is making calls to a Prism API with the transactionId=1234, then I would be able to lookup 
            the transactionId in both MuleSoft as well as Prism backend.
        clientFunction:
          type: string
          nullable: true
          description: >
            This is where the calling system can, for documentation purposes and logging purposes, send a function description to Prism to help filter transaction details. 
            An example use of this would be when creating an order, which would be comprised of many various API calls, and for which you would want to keep a consistent 
            transactionId across all these calls, but you might want to only lookup transaction details from the logs for only one function grouping of those calls 
            such as a value of 'GetCustomerDetails' (which could span multiple API calls).
      required:
        - sourceEnvironment
        - currentUser
